{
    "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json",
    "contentVersion": "1.0.0.0",
  "parameters": {
    "clusterLocation": {
      "type": "string",
      "defaultValue": "westus",
      "metadata": {
        "description": "Location of the Cluster"
      }
    },
    "clusterName": {
      "type": "string",
      "defaultValue": "GEN-UNIQUE",
      "metadata": {
        "description": "Name of your cluster - Between 3 and 23 characters. Letters and numbers only"
      }
    },
    "nt0applicationStartPort": {
      "type": "int",
      "defaultValue": 20000
    },
    "nt0applicationEndPort": {
      "type": "int",
      "defaultValue": 30000
    },
    "nt0ephemeralStartPort": {
      "type": "int",
      "defaultValue": 49152
    },
    "nt0ephemeralEndPort": {
      "type": "int",
      "defaultValue": 65534
    },
    "nt0fabricTcpGatewayPort": {
      "type": "int",
      "defaultValue": 19000
    },
    "nt0fabricHttpGatewayPort": {
      "type": "int",
      "defaultValue": 19080
    },
    "nt0reverseProxyEndpointPort": {
      "type": "int",
      "defaultValue": 19081
    },
    "existingVNetRGName": {
      "type": "string",
      "defaultValue": "ExistingRG"
    },
    "existingVNetName": {
      "type": "string",
      "defaultValue": "ExistingRG-vnet"
    },
    "subnet0Name": {
      "type": "string",
      "defaultValue": "Subnet-0"
    }, /*
    "subnet0Prefix": {
      "type": "string",
      "defaultValue": "10.0.0.0/24"
    },*/
    "computeLocation": {
      "type": "string"
    },
    "publicIPAddressName": {
      "type": "string",
      "defaultValue": "PublicIP-VM"
    },
    "publicIPAddressType": {
      "type": "string",
      "allowedValues": [
        "Dynamic"
      ],
      "defaultValue": "Dynamic"
    },
    "vmStorageAccountContainerName": {
      "type": "string",
      "defaultValue": "vhds"
    },
    "adminUserName": {
      "type": "string",
      "defaultValue": "testadm",
      "metadata": {
        "description": "Remote desktop user Id"
      }
    },
    "adminPassword": {
      "type": "securestring",
      "metadata": {
        "description": "Remote desktop user password. Must be a strong password"
      }
    },
    "virtualNetworkName": {
      "type": "string",
      "defaultValue": "VNet"
    },
    "addressPrefix": {
      "type": "string",
      "defaultValue": "10.0.0.0/16"
    },
    "dnsName": {
      "type": "string"
    },
    "nicName": {
      "type": "string",
      "defaultValue": "NIC"
    },
    "lbName": {
      "type": "string",
      "defaultValue": "LoadBalancer"
    },
    "lbIPName": {
      "type": "string",
      "defaultValue": "PublicIP-LB-FE"
    },
    "overProvision": {
      "type": "string",
      "defaultValue": "false"
    },
    "vmImagePublisher": {
      "type": "string",
      "defaultValue": "MicrosoftWindowsServer",
      "metadata": {
        "description": "VM image Publisher"
      }
    },
    "vmImageOffer": {
      "type": "string",
      "defaultValue": "WindowsServer",
      "metadata": {
        "description": "VM image offer"
      }
    },
    "vmImageSku": {
      "type": "string",
      "defaultValue": "2016-Datacenter-with-Containers",
      "metadata": {
        "description": "VM image SKU"
      }
    },
    "vmImageVersion": {
      "type": "string",
      "defaultValue": "latest",
      "metadata": {
        "description": "VM image version"
      }
    },
    "loadBalancedAppPort1": {
      "type": "int",
      "defaultValue": 80,
      "metadata": {
        "description": "Input endpoint1 for the application to use. Replace it with what your application uses"
      }
    },
    "loadBalancedAppPort2": {
      "type": "int",
      "defaultValue": 83,
      "metadata": {
        "description": "Input endpoint2 for the application to use. Replace it with what your application uses"
      }
    },
    "loadBalancedAppPort3": {
      "type": "int",
      "defaultValue": 8081,
      "metadata": {
        "description": "Input endpoint3 for the application to use. Replace it with what your application uses"
      }
    },
    "loadBalancedAppPort4": {
      "type": "int",
      "defaultValue": 55100,
      "metadata": {
        "description": "Input endpoint4 for the application to use. Replace it with what your application uses"
      }
    },
    "loadBalancedAppPort5": {
      "type": "int",
      "defaultValue": 55101,
      "metadata": {
        "description": "Input endpoint5 for the application to use. Replace it with what your application uses"
      }
    },
    "loadBalancedAppPort6": {
      "type": "int",
      "defaultValue": 55103,
      "metadata": {
        "description": "Input endpoint6 for the application to use. Replace it with what your application uses"
      }
    },
    "loadBalancedAppPort7": {
      "type": "int",
      "defaultValue": 55105,
      "metadata": {
        "description": "Input endpoint7 for the application to use. Replace it with what your application uses"
      }
    },
    "loadBalancedAppPort8": {
      "type": "int",
      "defaultValue": 55107,
      "metadata": {
        "description": "Input endpoint8 for the application to use. Replace it with what your application uses"
      }
    },
    "loadBalancedAppPort9": {
      "type": "int",
      "defaultValue": 55108,
      "metadata": {
        "description": "Input endpoint9 for the application to use. Replace it with what your application uses"
      }
    },
    "loadBalancedAppPort10": {
      "type": "int",
      "defaultValue": 55109,
      "metadata": {
        "description": "Input endpoint10 for the application to use. Replace it with what your application uses"
      }
    },
    "loadBalancedAppPort11": {
      "type": "int",
      "defaultValue": 55110,
      "metadata": {
        "description": "Input endpoint11 for the application to use. Replace it with what your application uses"
      }
    },
    "loadBalancedAppPort12": {
      "type": "int",
      "defaultValue": 55111,
      "metadata": {
        "description": "Input endpoint12 for the application to use. Replace it with what your application uses"
      }
    },
    "loadBalancedAppPort13": {
      "type": "int",
      "defaultValue": 55112,
      "metadata": {
        "description": "Input endpoint13 for the application to use. Replace it with what your application uses"
      }
    },
    "loadBalancedAppPort14": {
      "type": "int",
      "defaultValue": 55121,
      "metadata": {
        "description": "Input endpoint14 for the application to use. Replace it with what your application uses"
      }
    },
    "loadBalancedAppPort15": {
      "type": "int",
      "defaultValue": 55202,
      "metadata": {
        "description": "Input endpoint15 for the application to use. Replace it with what your application uses"
      }
    },
    "loadBalancedAppPort16": {
      "type": "int",
      "defaultValue": 55102,
      "metadata": {
        "description": "Input endpoint15 for the application to use. Replace it with what your application uses"
      }
    },
    "sourceVaultValue": {
      "type": "string",
      "defaultValue": "GEN-KEYVAULT-RESOURCE-ID",
      "metadata": {
        "description": "Resource Id of the key vault, is should be in the format of /subscriptions/<Sub ID>/resourceGroups/<Resource group name>/providers/Microsoft.KeyVault/vaults/<vault name>"
      }
    },
    "certificateUrlValue": {
      "type": "string",
      "defaultValue": "GEN-KEYVAULT-SSL-SECRET-URI",
      "metadata": {
        "description": "Refers to the location URL in your key vault where the certificate was uploaded, it is should be in the format of https://<name of the vault>.vault.azure.net:443/secrets/<exact location>"
      }
    },
    "clusterProtectionLevel": {
      "type": "string",
      "allowedValues": [
        "None",
        "Sign",
        "EncryptAndSign"
      ],
      "defaultValue": "EncryptAndSign",
      "metadata": {
        "description": "Protection level.Three values are allowed - EncryptAndSign, Sign, None. It is best to keep the default of EncryptAndSign, unless you have a need not to"
      }
    },
    "certificateStoreValue": {
      "type": "string",
      "allowedValues": [
        "My"
      ],
      "defaultValue": "My",
      "metadata": {
        "description": "The store name where the cert will be deployed in the virtual machine"
      }
    },
    "certificateThumbprint": {
      "type": "string",
      "defaultValue": "GEN-CUSTOM-DOMAIN-SSLCERT-THUMBPRINT",
      "metadata": {
        "description": "Certificate Thumbprint"
      }
    },
    "storageAccountType": {
      "type": "string",
      "allowedValues": [
        "Standard_LRS",
        "Standard_GRS"
      ],
      "defaultValue": "Standard_LRS",
      "metadata": {
        "description": "Replication option for the VM image storage account"
      }
    },
    "supportLogStorageAccountType": {
      "type": "string",
      "allowedValues": [
        "Standard_LRS",
        "Standard_GRS"
      ],
      "defaultValue": "Standard_LRS",
      "metadata": {
        "description": "Replication option for the support log storage account"
      }
    },
    "supportLogStorageAccountName": {
      "type": "string",
      "defaultValue": "[toLower( concat('sflogs', uniqueString(resourceGroup().id),'2'))]",
      "metadata": {
        "description": "Name for the storage account that contains support logs from the cluster"
      }
    },
    "applicationDiagnosticsStorageAccountType": {
      "type": "string",
      "allowedValues": [
        "Standard_LRS",
        "Standard_GRS"
      ],
      "defaultValue": "Standard_LRS",
      "metadata": {
        "description": "Replication option for the application diagnostics storage account"
      }
    },
    "applicationDiagnosticsStorageAccountName": {
      "type": "string",
      "defaultValue": "[toLower(concat('wad',uniqueString(resourceGroup().id), '3' ))]",
      "metadata": {
        "description": "Name for the storage account that contains application diagnostics data from the cluster"
      }
    },
    "nt0InstanceCount": {
      "type": "int",
      "defaultValue": 3,
      "metadata": {
        "description": "Instance count for node type"
      }
    },
    "vmNodeType0Name": {
      "type": "string",
      "defaultValue": "sfnode",
      "maxLength": 9
    },
    "vmNodeType0Size": {
      "type": "string",
      "defaultValue": "Standard_D1_v2"
    }
  },
  "variables": {
    "vmssApiVersion": "2017-03-30",
    "sfrpApiVersion": "2018-02-01",
    "lbApiVersion": "2015-06-15",
    "vNetApiVersion": "2015-06-15",
    "storageApiVersion": "2016-01-01",
    "publicIPApiVersion": "2015-06-15",
    /* "vnetID": "[resourceId('Microsoft.Network/virtualNetworks',parameters('virtualNetworkName'))]",*/
    "vnetID": "[concat('/subscriptions/', subscription().subscriptionId, '/resourceGroups/', parameters('existingVNetRGName'), '/providers/Microsoft.Network/virtualNetworks/', parameters('existingVNetName'))]",
    "subnet0Ref": "[concat(variables('vnetID'),'/subnets/',parameters('subnet0Name'))]",
    "lbID0": "[resourceId('Microsoft.Network/loadBalancers', concat('LB','-', parameters('clusterName'),'-',parameters('vmNodeType0Name')))]",
    "lbIPConfig0": "[concat(variables('lbID0'),'/frontendIPConfigurations/LoadBalancerIPConfig')]",
    "lbPoolID0": "[concat(variables('lbID0'),'/backendAddressPools/LoadBalancerBEAddressPool')]",
    "lbProbeID0": "[concat(variables('lbID0'),'/probes/FabricGatewayProbe')]",
    "lbHttpProbeID0": "[concat(variables('lbID0'),'/probes/FabricHttpGatewayProbe')]",
    "lbNatPoolID0": "[concat(variables('lbID0'),'/inboundNatPools/LoadBalancerBEAddressNatPool')]",
    "vmStorageAccountName0": "[toLower(concat(uniqueString(resourceGroup().id), '1', '0' ))]"
  },
    "resources": [
        {
            "apiVersion": "[variables('storageApiVersion')]",
            "type": "Microsoft.Storage/storageAccounts",
            "name": "[parameters('supportLogStorageAccountName')]",
            "location": "[parameters('computeLocation')]",
            "dependsOn": [],
            "properties": {},
            "kind": "Storage",
            "sku": {
                "name": "[parameters('supportLogStorageAccountType')]"
            },
            "tags": {
                "resourceType": "Service Fabric",
                "clusterName": "[parameters('clusterName')]"
            }
        },
        {
            "apiVersion": "[variables('storageApiVersion')]",
            "type": "Microsoft.Storage/storageAccounts",
            "name": "[parameters('applicationDiagnosticsStorageAccountName')]",
            "location": "[parameters('computeLocation')]",
            "dependsOn": [],
            "properties": {},
            "kind": "Storage",
            "sku": {
                "name": "[parameters('applicationDiagnosticsStorageAccountType')]"
            },
            "tags": {
                "resourceType": "Service Fabric",
                "clusterName": "[parameters('clusterName')]"
            }
        },/*
        {
            "apiVersion": "[variables('vNetApiVersion')]",
            "type": "Microsoft.Network/virtualNetworks",
            "name": "[parameters('virtualNetworkName')]",
            "location": "[parameters('computeLocation')]",
            "dependsOn": [],
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "[parameters('addressPrefix')]"
                    ]
                },
                "subnets": [
                    {
                        "name": "[parameters('subnet0Name')]",
                        "properties": {
                            "addressPrefix": "[parameters('subnet0Prefix')]"
                        }
                    }
                ]
            },
            "tags": {
                "resourceType": "Service Fabric",
                "clusterName": "[parameters('clusterName')]"
            }
        },*/
        {
            "apiVersion": "[variables('publicIPApiVersion')]",
            "type": "Microsoft.Network/publicIPAddresses",
            "name": "[concat(parameters('lbIPName'),'-',parameters('vmNodeType0Name'))]",
            "location": "[parameters('computeLocation')]",
            "properties": {
                "dnsSettings": {
                    "domainNameLabel": "[parameters('dnsName')]"
                },
                "publicIPAllocationMethod": "Dynamic"
            },
            "tags": {
                "resourceType": "Service Fabric",
                "clusterName": "[parameters('clusterName')]"
            }
        },
        {
            "apiVersion": "[variables('lbApiVersion')]",
            "type": "Microsoft.Network/loadBalancers",
            "name": "[concat('LB','-', parameters('clusterName'),'-',parameters('vmNodeType0Name'))]",
            "location": "[parameters('computeLocation')]",
            "dependsOn": [
                "[concat('Microsoft.Network/publicIPAddresses/',concat(parameters('lbIPName'),'-',parameters('vmNodeType0Name')))]"
            ],
            "properties": {
                "frontendIPConfigurations": [
                    {
                        "name": "LoadBalancerIPConfig",
                        "properties": {
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses',concat(parameters('lbIPName'),'-',parameters('vmNodeType0Name')))]"
                            }
                        }
                    }
                ],
                "backendAddressPools": [
                    {
                        "name": "LoadBalancerBEAddressPool",
                        "properties": {}
                    }
                ],
              "loadBalancingRules": [
                {
                  "name": "LBRule",
                  "properties": {
                    "backendAddressPool": {
                      "id": "[variables('lbPoolID0')]"
                    },
                    "backendPort": "[parameters('nt0fabricTcpGatewayPort')]",
                    "enableFloatingIP": "false",
                    "frontendIPConfiguration": {
                      "id": "[variables('lbIPConfig0')]"
                    },
                    "frontendPort": "[parameters('nt0fabricTcpGatewayPort')]",
                    "idleTimeoutInMinutes": "5",
                    "probe": {
                      "id": "[variables('lbProbeID0')]"
                    },
                    "protocol": "tcp"
                  }
                },
                {
                  "name": "LBHttpRule",
                  "properties": {
                    "backendAddressPool": {
                      "id": "[variables('lbPoolID0')]"
                    },
                    "backendPort": "[parameters('nt0fabricHttpGatewayPort')]",
                    "enableFloatingIP": "false",
                    "frontendIPConfiguration": {
                      "id": "[variables('lbIPConfig0')]"
                    },
                    "frontendPort": "[parameters('nt0fabricHttpGatewayPort')]",
                    "idleTimeoutInMinutes": "5",
                    "probe": {
                      "id": "[variables('lbHttpProbeID0')]"
                    },
                    "protocol": "tcp"
                  }
                },
                {
                  "name": "AppPortLBRule1",
                  "properties": {
                    "backendAddressPool": {
                      "id": "[variables('lbPoolID0')]"
                    },
                    "backendPort": "[parameters('loadBalancedAppPort1')]",
                    "enableFloatingIP": "false",
                    "frontendIPConfiguration": {
                      "id": "[variables('lbIPConfig0')]"
                    },
                    "frontendPort": "[parameters('loadBalancedAppPort1')]",
                    "idleTimeoutInMinutes": "5",
                    "probe": {
                      "id": "[concat(variables('lbID0'),'/probes/AppPortProbe1')]"
                    },
                    "protocol": "tcp"
                  }
                },
                {
                  "name": "AppPortLBRule2",
                  "properties": {
                    "backendAddressPool": {
                      "id": "[variables('lbPoolID0')]"
                    },
                    "backendPort": "[parameters('loadBalancedAppPort2')]",
                    "enableFloatingIP": "false",
                    "frontendIPConfiguration": {
                      "id": "[variables('lbIPConfig0')]"
                    },
                    "frontendPort": "[parameters('loadBalancedAppPort2')]",
                    "idleTimeoutInMinutes": "5",
                    "probe": {
                      "id": "[concat(variables('lbID0'),'/probes/AppPortProbe2')]"
                    },
                    "protocol": "tcp"
                  }
                },
                {
                  "name": "AppPortLBRule3",
                  "properties": {
                    "backendAddressPool": {
                      "id": "[variables('lbPoolID0')]"
                    },
                    "backendPort": "[parameters('loadBalancedAppPort3')]",
                    "enableFloatingIP": "false",
                    "frontendIPConfiguration": {
                      "id": "[variables('lbIPConfig0')]"
                    },
                    "frontendPort": "[parameters('loadBalancedAppPort3')]",
                    "idleTimeoutInMinutes": "5",
                    "probe": {
                      "id": "[concat(variables('lbID0'),'/probes/AppPortProbe3')]"
                    },
                    "protocol": "tcp"
                  }
                },
                {
                  "name": "AppPortLBRule4",
                  "properties": {
                    "backendAddressPool": {
                      "id": "[variables('lbPoolID0')]"
                    },
                    "backendPort": "[parameters('loadBalancedAppPort4')]",
                    "enableFloatingIP": "false",
                    "frontendIPConfiguration": {
                      "id": "[variables('lbIPConfig0')]"
                    },
                    "frontendPort": "[parameters('loadBalancedAppPort4')]",
                    "idleTimeoutInMinutes": "5",
                    "probe": {
                      "id": "[concat(variables('lbID0'),'/probes/AppPortProbe4')]"
                    },
                    "protocol": "tcp"
                  }
                },
                {
                  "name": "AppPortLBRule5",
                  "properties": {
                    "backendAddressPool": {
                      "id": "[variables('lbPoolID0')]"
                    },
                    "backendPort": "[parameters('loadBalancedAppPort5')]",
                    "enableFloatingIP": "false",
                    "frontendIPConfiguration": {
                      "id": "[variables('lbIPConfig0')]"
                    },
                    "frontendPort": "[parameters('loadBalancedAppPort5')]",
                    "idleTimeoutInMinutes": "5",
                    "probe": {
                      "id": "[concat(variables('lbID0'),'/probes/AppPortProbe5')]"
                    },
                    "protocol": "tcp"
                  }
                },
                {
                  "name": "AppPortLBRule6",
                  "properties": {
                    "backendAddressPool": {
                      "id": "[variables('lbPoolID0')]"
                    },
                    "backendPort": "[parameters('loadBalancedAppPort6')]",
                    "enableFloatingIP": "false",
                    "frontendIPConfiguration": {
                      "id": "[variables('lbIPConfig0')]"
                    },
                    "frontendPort": "[parameters('loadBalancedAppPort6')]",
                    "idleTimeoutInMinutes": "5",
                    "probe": {
                      "id": "[concat(variables('lbID0'),'/probes/AppPortProbe6')]"
                    },
                    "protocol": "tcp"
                  }
                },
                {
                  "name": "AppPortLBRule7",
                  "properties": {
                    "backendAddressPool": {
                      "id": "[variables('lbPoolID0')]"
                    },
                    "backendPort": "[parameters('loadBalancedAppPort7')]",
                    "enableFloatingIP": "false",
                    "frontendIPConfiguration": {
                      "id": "[variables('lbIPConfig0')]"
                    },
                    "frontendPort": "[parameters('loadBalancedAppPort7')]",
                    "idleTimeoutInMinutes": "5",
                    "probe": {
                      "id": "[concat(variables('lbID0'),'/probes/AppPortProbe7')]"
                    },
                    "protocol": "tcp"
                  }
                },
                {
                  "name": "AppPortLBRule8",
                  "properties": {
                    "backendAddressPool": {
                      "id": "[variables('lbPoolID0')]"
                    },
                    "backendPort": "[parameters('loadBalancedAppPort8')]",
                    "enableFloatingIP": "false",
                    "frontendIPConfiguration": {
                      "id": "[variables('lbIPConfig0')]"
                    },
                    "frontendPort": "[parameters('loadBalancedAppPort8')]",
                    "idleTimeoutInMinutes": "5",
                    "probe": {
                      "id": "[concat(variables('lbID0'),'/probes/AppPortProbe8')]"
                    },
                    "protocol": "tcp"
                  }
                },
                {
                  "name": "AppPortLBRule9",
                  "properties": {
                    "backendAddressPool": {
                      "id": "[variables('lbPoolID0')]"
                    },
                    "backendPort": "[parameters('loadBalancedAppPort9')]",
                    "enableFloatingIP": "false",
                    "frontendIPConfiguration": {
                      "id": "[variables('lbIPConfig0')]"
                    },
                    "frontendPort": "[parameters('loadBalancedAppPort9')]",
                    "idleTimeoutInMinutes": "5",
                    "probe": {
                      "id": "[concat(variables('lbID0'),'/probes/AppPortProbe9')]"
                    },
                    "protocol": "tcp"
                  }
                },
                {
                  "name": "AppPortLBRule10",
                  "properties": {
                    "backendAddressPool": {
                      "id": "[variables('lbPoolID0')]"
                    },
                    "backendPort": "[parameters('loadBalancedAppPort10')]",
                    "enableFloatingIP": "false",
                    "frontendIPConfiguration": {
                      "id": "[variables('lbIPConfig0')]"
                    },
                    "frontendPort": "[parameters('loadBalancedAppPort10')]",
                    "idleTimeoutInMinutes": "5",
                    "probe": {
                      "id": "[concat(variables('lbID0'),'/probes/AppPortProbe10')]"
                    },
                    "protocol": "tcp"
                  }
                },
                {
                  "name": "AppPortLBRule11",
                  "properties": {
                    "backendAddressPool": {
                      "id": "[variables('lbPoolID0')]"
                    },
                    "backendPort": "[parameters('loadBalancedAppPort11')]",
                    "enableFloatingIP": "false",
                    "frontendIPConfiguration": {
                      "id": "[variables('lbIPConfig0')]"
                    },
                    "frontendPort": "[parameters('loadBalancedAppPort11')]",
                    "idleTimeoutInMinutes": "5",
                    "probe": {
                      "id": "[concat(variables('lbID0'),'/probes/AppPortProbe11')]"
                    },
                    "protocol": "tcp"
                  }
                },
                {
                  "name": "AppPortLBRule12",
                  "properties": {
                    "backendAddressPool": {
                      "id": "[variables('lbPoolID0')]"
                    },
                    "backendPort": "[parameters('loadBalancedAppPort12')]",
                    "enableFloatingIP": "false",
                    "frontendIPConfiguration": {
                      "id": "[variables('lbIPConfig0')]"
                    },
                    "frontendPort": "[parameters('loadBalancedAppPort12')]",
                    "idleTimeoutInMinutes": "5",
                    "probe": {
                      "id": "[concat(variables('lbID0'),'/probes/AppPortProbe12')]"
                    },
                    "protocol": "tcp"
                  }
                },
                {
                  "name": "AppPortLBRule13",
                  "properties": {
                    "backendAddressPool": {
                      "id": "[variables('lbPoolID0')]"
                    },
                    "backendPort": "[parameters('loadBalancedAppPort13')]",
                    "enableFloatingIP": "false",
                    "frontendIPConfiguration": {
                      "id": "[variables('lbIPConfig0')]"
                    },
                    "frontendPort": "[parameters('loadBalancedAppPort13')]",
                    "idleTimeoutInMinutes": "5",
                    "probe": {
                      "id": "[concat(variables('lbID0'),'/probes/AppPortProbe13')]"
                    },
                    "protocol": "tcp"
                  }
                },
                {
                  "name": "AppPortLBRule14",
                  "properties": {
                    "backendAddressPool": {
                      "id": "[variables('lbPoolID0')]"
                    },
                    "backendPort": "[parameters('loadBalancedAppPort14')]",
                    "enableFloatingIP": "false",
                    "frontendIPConfiguration": {
                      "id": "[variables('lbIPConfig0')]"
                    },
                    "frontendPort": "[parameters('loadBalancedAppPort14')]",
                    "idleTimeoutInMinutes": "5",
                    "probe": {
                      "id": "[concat(variables('lbID0'),'/probes/AppPortProbe14')]"
                    },
                    "protocol": "tcp"
                  }
                },
                {
                  "name": "AppPortLBRule15",
                  "properties": {
                    "backendAddressPool": {
                      "id": "[variables('lbPoolID0')]"
                    },
                    "backendPort": "[parameters('loadBalancedAppPort15')]",
                    "enableFloatingIP": "false",
                    "frontendIPConfiguration": {
                      "id": "[variables('lbIPConfig0')]"
                    },
                    "frontendPort": "[parameters('loadBalancedAppPort15')]",
                    "idleTimeoutInMinutes": "5",
                    "probe": {
                      "id": "[concat(variables('lbID0'),'/probes/AppPortProbe15')]"
                    },
                    "protocol": "tcp"
                  }
                },
                {
                  "name": "AppPortLBRule16",
                  "properties": {
                    "backendAddressPool": {
                      "id": "[variables('lbPoolID0')]"
                    },
                    "backendPort": "[parameters('loadBalancedAppPort16')]",
                    "enableFloatingIP": "false",
                    "frontendIPConfiguration": {
                      "id": "[variables('lbIPConfig0')]"
                    },
                    "frontendPort": "[parameters('loadBalancedAppPort16')]",
                    "idleTimeoutInMinutes": "5",
                    "probe": {
                      "id": "[concat(variables('lbID0'),'/probes/AppPortProbe16')]"
                    },
                    "protocol": "tcp"
                  }
                }
              ],
              "probes": [
                {
                  "name": "FabricGatewayProbe",
                  "properties": {
                    "intervalInSeconds": 5,
                    "numberOfProbes": 2,
                    "port": "[parameters('nt0fabricTcpGatewayPort')]",
                    "protocol": "tcp"
                  }
                },
                {
                  "name": "FabricHttpGatewayProbe",
                  "properties": {
                    "intervalInSeconds": 5,
                    "numberOfProbes": 2,
                    "port": "[parameters('nt0fabricHttpGatewayPort')]",
                    "protocol": "tcp"
                  }
                },
                {
                  "name": "AppPortProbe1",
                  "properties": {
                    "intervalInSeconds": 5,
                    "numberOfProbes": 2,
                    "port": "[parameters('loadBalancedAppPort1')]",
                    "protocol": "tcp"
                  }
                },
                {
                  "name": "AppPortProbe2",
                  "properties": {
                    "intervalInSeconds": 5,
                    "numberOfProbes": 2,
                    "port": "[parameters('loadBalancedAppPort2')]",
                    "protocol": "tcp"
                  }
                },
                {
                  "name": "AppPortProbe3",
                  "properties": {
                    "intervalInSeconds": 5,
                    "numberOfProbes": 2,
                    "port": "[parameters('loadBalancedAppPort3')]",
                    "protocol": "tcp"
                  }
                },
                {
                  "name": "AppPortProbe4",
                  "properties": {
                    "intervalInSeconds": 5,
                    "numberOfProbes": 2,
                    "port": "[parameters('loadBalancedAppPort4')]",
                    "protocol": "tcp"
                  }
                },
                {
                  "name": "AppPortProbe5",
                  "properties": {
                    "intervalInSeconds": 5,
                    "numberOfProbes": 2,
                    "port": "[parameters('loadBalancedAppPort5')]",
                    "protocol": "tcp"
                  }
                },
                {
                  "name": "AppPortProbe6",
                  "properties": {
                    "intervalInSeconds": 5,
                    "numberOfProbes": 2,
                    "port": "[parameters('loadBalancedAppPort6')]",
                    "protocol": "tcp"
                  }
                },
                {
                  "name": "AppPortProbe7",
                  "properties": {
                    "intervalInSeconds": 5,
                    "numberOfProbes": 2,
                    "port": "[parameters('loadBalancedAppPort7')]",
                    "protocol": "tcp"
                  }
                },
                {
                  "name": "AppPortProbe8",
                  "properties": {
                    "intervalInSeconds": 5,
                    "numberOfProbes": 2,
                    "port": "[parameters('loadBalancedAppPort8')]",
                    "protocol": "tcp"
                  }
                },
                {
                  "name": "AppPortProbe9",
                  "properties": {
                    "intervalInSeconds": 5,
                    "numberOfProbes": 2,
                    "port": "[parameters('loadBalancedAppPort9')]",
                    "protocol": "tcp"
                  }
                },
                {
                  "name": "AppPortProbe10",
                  "properties": {
                    "intervalInSeconds": 5,
                    "numberOfProbes": 2,
                    "port": "[parameters('loadBalancedAppPort10')]",
                    "protocol": "tcp"
                  }
                },
                {
                  "name": "AppPortProbe11",
                  "properties": {
                    "intervalInSeconds": 5,
                    "numberOfProbes": 2,
                    "port": "[parameters('loadBalancedAppPort11')]",
                    "protocol": "tcp"
                  }
                },
                {
                  "name": "AppPortProbe12",
                  "properties": {
                    "intervalInSeconds": 5,
                    "numberOfProbes": 2,
                    "port": "[parameters('loadBalancedAppPort12')]",
                    "protocol": "tcp"
                  }
                },
                {
                  "name": "AppPortProbe13",
                  "properties": {
                    "intervalInSeconds": 5,
                    "numberOfProbes": 2,
                    "port": "[parameters('loadBalancedAppPort13')]",
                    "protocol": "tcp"
                  }
                },
                {
                  "name": "AppPortProbe14",
                  "properties": {
                    "intervalInSeconds": 5,
                    "numberOfProbes": 2,
                    "port": "[parameters('loadBalancedAppPort14')]",
                    "protocol": "tcp"
                  }
                },
                {
                  "name": "AppPortProbe15",
                  "properties": {
                    "intervalInSeconds": 5,
                    "numberOfProbes": 2,
                    "port": "[parameters('loadBalancedAppPort15')]",
                    "protocol": "tcp"
                  }
                },
                {
                  "name": "AppPortProbe16",
                  "properties": {
                    "intervalInSeconds": 5,
                    "numberOfProbes": 2,
                    "port": "[parameters('loadBalancedAppPort16')]",
                    "protocol": "tcp"
                  }
                }
              ],
                "inboundNatPools": [
                    {
                        "name": "LoadBalancerBEAddressNatPool",
                        "properties": {
                            "backendPort": "3389",
                            "frontendIPConfiguration": {
                                "id": "[variables('lbIPConfig0')]"
                            },
                            "frontendPortRangeEnd": "4500",
                            "frontendPortRangeStart": "3389",
                            "protocol": "tcp"
                        }
                    }
                ]
            },
            "tags": {
                "resourceType": "Service Fabric",
                "clusterName": "[parameters('clusterName')]"
            }
        },
        {
            "apiVersion": "[variables('vmssApiVersion')]",
            "type": "Microsoft.Compute/virtualMachineScaleSets",
            "name": "[parameters('vmNodeType0Name')]",
            "location": "[parameters('computeLocation')]",
            "dependsOn": [
            /*    "[concat('Microsoft.Network/virtualNetworks/', parameters('virtualNetworkName'))]",*/
                "[concat('Microsoft.Network/loadBalancers/', concat('LB','-', parameters('clusterName'),'-',parameters('vmNodeType0Name')))]",
                "[concat('Microsoft.Storage/storageAccounts/', parameters('supportLogStorageAccountName'))]",
                "[concat('Microsoft.Storage/storageAccounts/', parameters('applicationDiagnosticsStorageAccountName'))]"
            ],
            "properties": {
                "overprovision": "[parameters('overProvision')]",
                "upgradePolicy": {
                    "mode": "Automatic"
                },
                "virtualMachineProfile": {
                    "extensionProfile": {
                        "extensions": [
                            {
                                "name": "[concat(parameters('vmNodeType0Name'),'_ServiceFabricNode')]",
                                "properties": {
                                    "type": "ServiceFabricNode",
                                    "autoUpgradeMinorVersion": true,
                                    "protectedSettings": {
                                        "StorageAccountKey1": "[listKeys(resourceId('Microsoft.Storage/storageAccounts', parameters('supportLogStorageAccountName')),'2015-05-01-preview').key1]",
                                        "StorageAccountKey2": "[listKeys(resourceId('Microsoft.Storage/storageAccounts', parameters('supportLogStorageAccountName')),'2015-05-01-preview').key2]"
                                    },
                                    "publisher": "Microsoft.Azure.ServiceFabric",
                                    "settings": {
                                        "clusterEndpoint": "[reference(parameters('clusterName')).clusterEndpoint]",
                                        "nodeTypeRef": "[parameters('vmNodeType0Name')]",
                                        "dataPath": "D:\\\\SvcFab",
                                        "durabilityLevel": "Bronze",
                                        "enableParallelJobs": true,
                                        /*"nicPrefixOverride": "[parameters('subnet0Prefix')]",*/
                                        "certificate": {
                                            "thumbprint": "[parameters('certificateThumbprint')]",
                                            "x509StoreName": "[parameters('certificateStoreValue')]"
                                        }
                                    },
                                    "typeHandlerVersion": "1.1"
                                }
                            },
                          {
                            "name": "[concat('VMDiagnosticsVmExt','_vmNodeType0Name')]",
                            "properties": {
                              "type": "IaaSDiagnostics",
                              "autoUpgradeMinorVersion": true,
                              "protectedSettings": {
                                "storageAccountName": "[parameters('applicationDiagnosticsStorageAccountName')]",
                                "storageAccountKey": "[listKeys(resourceId('Microsoft.Storage/storageAccounts', parameters('applicationDiagnosticsStorageAccountName')),'2015-05-01-preview').key1]",
                                "storageAccountEndPoint": "https://core.windows.net/"
                              },
                              "publisher": "Microsoft.Azure.Diagnostics",
                              "settings": {
                                "WadCfg": {
                                  "DiagnosticMonitorConfiguration": {
                                    "overallQuotaInMB": "50000",
                                    "EtwProviders": {
                                      "EtwEventSourceProviderConfiguration": [
                                        {
                                          "provider": "Microsoft-ServiceFabric-Actors",
                                          "scheduledTransferKeywordFilter": "1",
                                          "scheduledTransferPeriod": "PT5M",
                                          "DefaultEvents": {
                                            "eventDestination": "ServiceFabricReliableActorEventTable"
                                          }
                                        },
                                        {
                                          "provider": "Microsoft-ServiceFabric-Services",
                                          "scheduledTransferPeriod": "PT5M",
                                          "DefaultEvents": {
                                            "eventDestination": "ServiceFabricReliableServiceEventTable"
                                          }
                                        }
                                      ],
                                      "EtwManifestProviderConfiguration": [
                                        {
                                          "provider": "cbd93bc2-71e5-4566-b3a7-595d8eeca6e8",
                                          "scheduledTransferLogLevelFilter": "Information",
                                          "scheduledTransferKeywordFilter": "4611686018427387904",
                                          "scheduledTransferPeriod": "PT5M",
                                          "DefaultEvents": {
                                            "eventDestination": "ServiceFabricSystemEventTable"
                                          }
                                        }
                                      ]
                                    }
                                  }
                                },
                                "StorageAccount": "[parameters('applicationDiagnosticsStorageAccountName')]"
                              },
                              "typeHandlerVersion": "1.5"
                            }
                          }
                        ]
                    },
                    "networkProfile": {
                        "networkInterfaceConfigurations": [
                            {
                                "name": "[concat(parameters('nicName'), '-0')]",
                                "properties": {
                                    "ipConfigurations": [
                                        {
                                            "name": "[concat(parameters('nicName'),'-',0)]",
                                            "properties": {
                                                "loadBalancerBackendAddressPools": [
                                                    {
                                                        "id": "[variables('lbPoolID0')]"
                                                    }
                                                ],
                                                "loadBalancerInboundNatPools": [
                                                    {
                                                        "id": "[variables('lbNatPoolID0')]"
                                                    }
                                                ],
                                                "subnet": {
                                                    "id": "[variables('subnet0Ref')]"
                                                }
                                            }
                                        }
                                    ],
                                    "primary": true
                                }
                            }
                        ]
                    },
                    "osProfile": {
                        "adminPassword": "[parameters('adminPassword')]",
                        "adminUsername": "[parameters('adminUsername')]",
                        "computernamePrefix": "[parameters('vmNodeType0Name')]",
                        "secrets": [
                            {
                                "sourceVault": {
                                    "id": "[parameters('sourceVaultValue')]"
                                },
                                "vaultCertificates": [
                                    {
                                        "certificateStore": "[parameters('certificateStoreValue')]",
                                        "certificateUrl": "[parameters('certificateUrlValue')]"
                                    }
                                ]
                            }
                        ]
                    },
                    "storageProfile": {
                        "imageReference": {
                            "publisher": "[parameters('vmImagePublisher')]",
                            "offer": "[parameters('vmImageOffer')]",
                            "sku": "[parameters('vmImageSku')]",
                            "version": "[parameters('vmImageVersion')]"
                        },
                        "osDisk": {
                            "caching": "ReadOnly",
                            "createOption": "FromImage",
                            "managedDisk": {
                                "storageAccountType": "[parameters('storageAccountType')]"
                            }
                        }
                    }
                }
            },
            "sku": {
                "name": "[parameters('vmNodeType0Size')]",
                "capacity": "[parameters('nt0InstanceCount')]",
                "tier": "Standard"
            },
            "tags": {
                "resourceType": "Service Fabric",
                "clusterName": "[parameters('clusterName')]"
            }
        },
        {
            "apiVersion": "2018-02-01",
            "type": "Microsoft.ServiceFabric/clusters",
            "name": "[parameters('clusterName')]",
            "location": "[parameters('clusterLocation')]",
            "dependsOn": [
                "[concat('Microsoft.Storage/storageAccounts/', parameters('supportLogStorageAccountName'))]"
            ],
          "properties": {
            "addonFeatures": [
              "DnsService",
              "RepairManager"
            ],
            "certificate": {
              "thumbprint": "[parameters('certificateThumbprint')]",
              "x509StoreName": "[parameters('certificateStoreValue')]"
            },
            "azureActiveDirectory": {
              "tenantId": "wwwwwwww-wwww-wwww-wwww-wwwwwwwwwwww",
              "clusterApplication": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
              "clientApplication": "yyyyyyyy-yyyy-yyyy-yyyy-yyyyyyyyyyyy"
            },
            "clientCertificateCommonNames": [],
            "clientCertificateThumbprints": [],
            "clusterState": "Default",
            "diagnosticsStorageAccountConfig": {
              "blobEndpoint": "[reference(concat('Microsoft.Storage/storageAccounts/', parameters('supportLogStorageAccountName')), variables('storageApiVersion')).primaryEndpoints.blob]",
              "protectedAccountKeyName": "StorageAccountKey1",
              "queueEndpoint": "[reference(concat('Microsoft.Storage/storageAccounts/', parameters('supportLogStorageAccountName')), variables('storageApiVersion')).primaryEndpoints.queue]",
              "storageAccountName": "[parameters('supportLogStorageAccountName')]",
              "tableEndpoint": "[reference(concat('Microsoft.Storage/storageAccounts/', parameters('supportLogStorageAccountName')), variables('storageApiVersion')).primaryEndpoints.table]"
            },
            "fabricSettings": [
              {
                "parameters": [
                  {
                    "name": "ClusterProtectionLevel",
                    "value": "[parameters('clusterProtectionLevel')]"
                  }
                ],
                "name": "Security"
              }
            ],
            "managementEndpoint": "[concat('https://',reference(concat(parameters('lbIPName'),'-',parameters('vmNodeType0Name'))).dnsSettings.fqdn,':',parameters('nt0fabricHttpGatewayPort'))]",
            "nodeTypes": [
              {
                "name": "[parameters('vmNodeType0Name')]",
                "applicationPorts": {
                  "endPort": "[parameters('nt0applicationEndPort')]",
                  "startPort": "[parameters('nt0applicationStartPort')]"
                },
                "clientConnectionEndpointPort": "[parameters('nt0fabricTcpGatewayPort')]",
                "durabilityLevel": "Bronze",
                "ephemeralPorts": {
                  "endPort": "[parameters('nt0ephemeralEndPort')]",
                  "startPort": "[parameters('nt0ephemeralStartPort')]"
                },
                "httpGatewayEndpointPort": "[parameters('nt0fabricHttpGatewayPort')]",
                "isPrimary": true,
                "reverseProxyEndpointPort": "[parameters('nt0reverseProxyEndpointPort')]",
                "vmInstanceCount": "[parameters('nt0InstanceCount')]"
              }
            ],
            "provisioningState": "Default",
            "reliabilityLevel": "Bronze",
            "upgradeMode": "Automatic",
            "vmImage": "Windows"
          },
            "tags": {
                "resourceType": "Service Fabric",
                "clusterName": "[parameters('clusterName')]"
            }
        }
    ],
    "outputs": {
        "clusterProperties": {
            "value": "[reference(parameters('clusterName'))]",
            "type": "object"
        }
    }
}